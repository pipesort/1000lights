{"version":3,"sources":["Button.tsx"],"names":["React","View","Text","TouchableOpacity","StyleSheet","colors","Button","children","size","color","appearance","style","disabled","rest","styles","button","text","create","flexDirection","justifyContent","alignItems","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderColor","fontSize"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,KAAoC,OAApC,CACA,OACEC,IADF,CAEEC,IAFF,CAGEC,gBAHF,CAKEC,UALF,KAMO,cANP,CAQA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAUA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAQ+B,IAP5CC,CAAAA,QAO4C,MAP5CA,QAO4C,gBAN5CC,IAM4C,CAN5CA,IAM4C,oBANrC,QAMqC,2BAL5CC,KAK4C,CAL5CA,KAK4C,qBALpC,SAKoC,iCAJ5CC,UAI4C,CAJ5CA,UAI4C,0BAJ/B,QAI+B,iBAH5CC,KAG4C,MAH5CA,KAG4C,CAF5CC,QAE4C,MAF5CA,QAE4C,CADzCC,IACyC,4FAC5C,MACE,qBAAC,IAAD,kDACE,oBAAC,gBAAD,WAAkB,aAAa,CAAE,GAAjC,EAA0CA,IAA1C,mDACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACC,MAAM,CAAC,CAAEL,KAAK,CAALA,KAAF,CAASC,UAAU,CAAVA,UAAT,CAAD,CAAN,CAA8BK,MAA/B,CAAuCJ,KAAvC,CAAb,iDACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACG,MAAM,CAAC,CAAEN,IAAI,CAAJA,IAAF,CAAD,CAAN,CAAiBQ,IAAlB,CAAb,iDAAuCT,QAAvC,CADF,CADF,CADF,CADF,CASD,CAlBD,CAoBA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,OAA0D,IAAvDN,CAAAA,IAAuD,OAAvDA,IAAuD,mBAAjDC,KAAiD,CAAjDA,KAAiD,sBAAzC,SAAyC,aAA9BC,UAA8B,OAA9BA,UAA8B,CACvE,MAAON,CAAAA,UAAU,CAACa,MAAX,CAAkB,CACvBF,MAAM,CAAE,CACNG,aAAa,CAAE,KADT,CAENC,cAAc,CAAE,UAFV,CAGNC,UAAU,CAAE,QAHN,CAINC,eAAe,CAAEhB,MAAM,CAACI,KAAD,CAAN,EAAiBJ,MAAM,CAAC,SAAD,CAJlC,CAKNiB,YAAY,CAAE,CALR,CAMNC,iBAAiB,CAAE,EANb,CAONC,eAAe,CAAE,CAPX,CAQNC,WAAW,CAAEf,UAAU,GAAK,UAAf,CAA4BN,UAAU,CAACsB,aAAvC,CAAuD,CAR9D,CASNC,WAAW,CAAEtB,MAAM,CAACI,KAAD,CAAN,EAAiBJ,MAAM,CAAC,SAAD,CAT9B,CADe,CAYvBW,IAAI,CAAE,CACJP,KAAK,CAAE,SADH,CAEJmB,QAAQ,CAAEpB,IAAI,GAAK,QAAT,CAAoB,EAApB,CAAyBA,IAAI,GAAK,OAAT,CAAmB,EAAnB,CAAwB,EAFvD,CAZiB,CAAlB,CAAP,CAiBD,CAlBD,CAoBA,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { ReactElement } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TouchableOpacityProps,\r\n  StyleSheet\r\n} from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\n\r\nexport interface ButtonProps extends TouchableOpacityProps {\r\n  disabled?: boolean;\r\n  children?: string;\r\n  size?: string;\r\n  color?: string;\r\n  appearance?: string;\r\n}\r\n\r\nconst Button = ({\r\n  children,\r\n  size = \"medium\",\r\n  color = \"primary\",\r\n  appearance = \"normal\",\r\n  style,\r\n  disabled,\r\n  ...rest\r\n}: ButtonProps): ReactElement<ButtonProps> => {\r\n  return (\r\n    <View>\r\n      <TouchableOpacity activeOpacity={0.2} {...rest}>\r\n        <View style={[styles({ color, appearance }).button, style]}>\r\n          <Text style={[styles({ size }).text]}>{children}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = ({ size, color = \"primary\", appearance }: ButtonProps) => {\r\n  return StyleSheet.create({\r\n    button: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"flex-end\",\r\n      alignItems: \"center\",\r\n      backgroundColor: colors[color] || colors[\"primary\"],\r\n      borderRadius: 5,\r\n      paddingHorizontal: 20,\r\n      paddingVertical: 5,\r\n      borderWidth: appearance === \"bordered\" ? StyleSheet.hairlineWidth : 0,\r\n      borderColor: colors[color] || colors[\"primary\"]\r\n    },\r\n    text: {\r\n      color: \"#ffffff\",\r\n      fontSize: size === \"medium\" ? 20 : size === \"small\" ? 10 : 30\r\n    }\r\n  });\r\n};\r\n\r\nexport default Button;\r\n"]}