{"version":3,"sources":["SelectBox.js"],"names":["React","useState","useRef","View","Text","TouchableOpacity","TextInput","FlatList","ScrollView","RBSheet","SelectBox","placeholder","label","renderItem","data","value","setValue","ref","color","fontSize","marginLeft","fontWeight","current","open","container","borderTopLeftRadius","borderTopRightRadius","item","close","id","Country","country","padding","margin","Select","options"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  FlatList,\r\n  ScrollView\r\n} from \"react-native\";\r\nimport RBSheet from \"react-native-raw-bottom-sheet\";\r\n\r\nfunction SelectBox({ placeholder, label, renderItem, data }) {\r\n  const [value, setValue] = useState(\"\");\r\n  const ref = useRef(null);\r\n  return (\r\n    <>\r\n      <View>\r\n        <Text style={{ color: \"#787878\", fontSize: 14 }}>{label}</Text>\r\n\r\n        <View style={{ marginLeft: -3 }}>\r\n          <TextInput\r\n            placeholder={placeholder}\r\n            placeholderTextColor=\"#c4c4c4\"\r\n            style={{ fontSize: 18, fontWeight: \"bold\" }}\r\n            onFocus={() => ref.current.open()}\r\n            value={value}\r\n          />\r\n        </View>\r\n      </View>\r\n      <RBSheet\r\n        ref={ref}\r\n        height={300}\r\n        duration={300}\r\n        closeOnDragDown={true}\r\n        customStyles={{\r\n          container: {\r\n            borderTopLeftRadius: 30,\r\n            borderTopRightRadius: 30\r\n          }\r\n        }}\r\n      >\r\n        <ScrollView>\r\n          <FlatList\r\n            data={data}\r\n            renderItem={item => {\r\n              return (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setValue(item.item);\r\n                    ref.current.close();\r\n                  }}\r\n                >\r\n                  {renderItem(item)}\r\n                </TouchableOpacity>\r\n              );\r\n            }}\r\n            keyExtractor={item => item.id}\r\n          />\r\n        </ScrollView>\r\n      </RBSheet>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Country({ country }) {\r\n  return (\r\n    <View style={{ padding: 5, margin: 10 }}>\r\n      <Text style={{ color: \"black\", fontSize: 16 }}>{country}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Select({ data, options }) {\r\n  return (\r\n    <View>\r\n      <SelectBox\r\n        placeholder={data.placeholder}\r\n        data={options}\r\n        onSelect={item => item}\r\n        renderItem={({ item }) => <Country id={item} country={item} />}\r\n        label={data.label}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n"]}