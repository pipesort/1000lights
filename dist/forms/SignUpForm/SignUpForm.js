import React, { useState, useRef } from 'react';
import { View, StyleSheet, Text, TouchableOpacity, TextInput, FlatList, ScrollView, ActivityIndicator, } from 'react-native';
import RBSheet from 'react-native-raw-bottom-sheet';
import Icon from 'react-native-vector-icons/MaterialCommunityIcons';
var styles = StyleSheet.create({
    container: {
        alignItems: 'stretch',
        justifyContent: 'center',
    },
    otpButton: {
        justifyContent: 'flex-end',
        backgroundColor: '#ff297f',
        alignItems: 'center',
        height: 50,
        width: '50%',
        borderRadius: 20,
        margin: 10,
        marginLeft: 5,
        marginRight: 30,
    },
    buttonCard: {
        backgroundColor: 'purple',
        borderTopLeftRadius: 50,
        height: 200,
    },
    signinCard: {
        height: 400,
        flexDirection: 'column',
        margin: 10,
        borderRadius: 20,
        padding: 16,
    },
    buttonCard: {
        backgroundColor: '#fafafa',
        // borderTopLeftRadius: 50,
        height: 700,
        marginTop: 20,
    },
    signInButton: {
        justifyContent: 'flex-end',
        backgroundColor: '#ff297f',
        alignItems: 'center',
        height: 50,
        width: '50%',
        borderRadius: 20,
        margin: 10,
        marginLeft: 30,
        marginRight: 30,
    },
    otpButton: {
        justifyContent: 'flex-end',
        backgroundColor: '#ff297f',
        alignItems: 'center',
        height: 50,
        width: '50%',
        borderRadius: 20,
        margin: 10,
        marginLeft: -3,
    },
});
var cities = [
    'Arcot',
    'Chengalpattu',
    'Chennai',
    'Chidambaram',
    'Coimbatore',
    'Cuddalore',
    'Dharmapuri',
    'Dindigul',
    'Erode',
    'Kanchipuram',
    'Kanniyakumari',
    'Kodaikanal',
    'Kumbakonam',
    'Madurai',
    'Mamallapuram',
    'Nagappattinam',
    'Nagercoil',
    'Palayankottai',
    'Pudukkottai',
    'Rajapalaiyam',
    'Ramanathapuram',
    'Salem',
    'Thanjavur',
    'Tiruchchirappalli',
    'Tirunelveli',
    'Tiruppur',
    'Tuticorin',
    'Udhagamandalam',
    'Vellore',
];
var states = [
    'Andaman & Nicobar',
    'Andhra Pradesh',
    'Arunachal Pradesh',
    'Assam',
    'Bihar',
    'Chandigarh',
    'Chhattisgarh',
    'Dadra & Nagar Haveli',
    'Daman & Diu',
    'Delhi',
    'Goa',
    'Gujarat',
    'Haryana',
    'Himachal Pradesh',
    'Jammu & Kashmir',
    'Jharkhand',
    'Karnataka',
    'Kerala',
    'Lakshadweep',
    'Madhya Pradesh',
    'Maharashtra',
    'Manipur',
    'Meghalaya',
    'Mizoram',
    'Nagaland',
    'Orissa',
    'Pondicherry',
    'Punjab',
    'Rajasthan',
    'Sikkim',
    'Tamil Nadu',
    'Tripura',
    'Uttar Pradesh',
    'Uttaranchal',
    'West Bengal',
];
var countries = [
    'Afghanistan',
    'Albania',
    'Algeria',
    'American Samoa',
    'Angola',
    'Anguilla',
    'Antartica',
    'Antigua and Barbuda',
    'Argentina',
    'Armenia',
    'Aruba',
    'Ashmore and Cartier Island',
    'Australia',
    'Austria',
    'Azerbaijan',
    'Bahamas',
    'Bahrain',
    'Bangladesh',
    'Barbados',
    'Belarus',
    'Belgium',
    'Belize',
    'Benin',
    'Bermuda',
    'Bhutan',
    'Bolivia',
    'Bosnia and Herzegovina',
    'Botswana',
    'Brazil',
    'British Virgin Islands',
    'Brunei',
    'Bulgaria',
    'Burkina Faso',
    'Burma',
    'Burundi',
    'Cambodia',
    'Cameroon',
    'Canada',
    'Cape Verde',
    'Cayman Islands',
    'Central African Republic',
    'Chad',
    'Chile',
    'China',
    'Christmas Island',
    'Clipperton Island',
    'Cocos (Keeling) Islands',
    'Colombia',
    'Comoros',
    'Congo, Democratic Republic',
    'Congo, Republic of the',
    'Cook Islands',
    'Costa Rica',
    "Cote d'Ivoire",
    'Croatia',
    'Cuba',
    'Cyprus',
    'Czeck Republic',
    'Denmark',
    'Djibouti',
    'Dominica',
    'Dominican Republic',
    'Ecuador',
    'Egypt',
    'El Salvador',
    'Equatorial Guinea',
    'Eritrea',
    'Estonia',
    'Ethiopia',
    'Europa Island',
    'Falkland Islands',
    'Faroe Islands',
    'Fiji',
    'Finland',
    'France',
    'French Guiana',
    'French Polynesia',
    'Antarctic Lands',
    'Gabon',
    'Gambia, The',
    'Gaza Strip',
    'Georgia',
    'Germany',
    'Ghana',
    'Gibraltar',
    'Glorioso Islands',
    'Greece',
    'Greenland',
    'Grenada',
    'Guadeloupe',
    'Guam',
    'Guatemala',
    'Guernsey',
    'Guinea',
    'Guinea-Bissau',
    'Guyana',
    'Haiti',
    'Heard Island',
    'Holy See (Vatican City)',
    'Honduras',
    'Hong Kong',
    'Howland Island',
    'Hungary',
    'Iceland',
    'India',
    'Indonesia',
    'Iran',
    'Iraq',
    'Ireland',
    'Ireland, Northern',
    'Israel',
    'Italy',
    'Jamaica',
    'Jan Mayen',
    'Japan',
    'Jarvis Island',
    'Jersey',
    'Johnston Atoll',
    'Jordan',
    'Juan de Nova Island',
    'Kazakhstan',
    'Kenya',
    'Kiribati',
    'Korea, North',
    'Korea, South',
    'Kuwait',
    'Kyrgyzstan',
    'Laos',
    'Latvia',
    'Lebanon',
    'Lesotho',
    'Liberia',
    'Libya',
    'Liechtenstein',
    'Lithuania',
    'Luxembourg',
    'Macau',
    'Macedonia',
    'Madagascar',
    'Malawi',
    'Malaysia',
    'Maldives',
    'Mali',
    'Malta',
    'Man, Isle of',
    'Marshall Islands',
    'Martinique',
    'Mauritania',
    'Mauritius',
    'Mayotte',
    'Mexico',
    'Micronesia',
    'Midway Islands',
    'Moldova',
    'Monaco',
    'Mongolia',
    'Montserrat',
    'Morocco',
    'Mozambique',
    'Namibia',
    'Nauru',
    'Nepal',
    'Netherlands',
    'Netherlands Antilles',
    'New Caledonia',
    'New Zealand',
    'Nicaragua',
    'Niger',
    'Nigeria',
    'Niue',
    'Norfolk Island',
    'Northern Mariana Islands',
    'Norway',
    'Oman',
    'Pakistan',
    'Palau',
    'Panama',
    'Papua New Guinea',
    'Paraguay',
    'Peru',
    'Philippines',
    'Pitcaim Islands',
    'Poland',
    'Portugal',
    'Puerto Rico',
    'Qatar',
    'Reunion',
    'Romainia',
    'Russia',
    'Rwanda',
    'Saint Helena',
    'Saint Kitts and Nevis',
    'Saint Lucia',
    'Saint Pierre and Miquelon',
    'Saint Vincent',
    'Samoa',
    'San Marino',
    'Sao Tome and Principe',
    'Saudi Arabia',
    'Scotland',
    'Senegal',
    'Seychelles',
    'Sierra Leone',
    'Singapore',
    'Slovakia',
    'Slovenia',
    'Solomon Islands',
    'Somalia',
    'South Africa',
    'South Georgia',
    'Spain',
    'Spratly Islands',
    'Sri Lanka',
    'Sudan',
    'Suriname',
    'Svalbard',
    'Swaziland',
    'Sweden',
    'Switzerland',
    'Syria',
    'Taiwan',
    'Tajikistan',
    'Tanzania',
    'Thailand',
    'Tobago',
    'Toga',
    'Tokelau',
    'Tonga',
    'Trinidad',
    'Tunisia',
    'Turkey',
    'Turkmenistan',
    'Tuvalu',
    'Uganda',
    'Ukraine',
    'United Arab Emirates',
    'United Kingdom',
    'Uruguay',
    'USA',
    'Uzbekistan',
    'Vanuatu',
    'Venezuela',
    'Vietnam',
    'Virgin Islands',
    'Wales',
    'Wallis and Futuna',
    'West Bank',
    'Western Sahara',
    'Yemen',
    'Yugoslavia',
    'Zambia',
    'Zimbabwe',
];
function TextBox(_a) {
    var placeholder = _a.placeholder, label = _a.label;
    return (React.createElement(View, { style: { marginBottom: 10 } },
        React.createElement(Text, { style: { color: '#787878', fontSize: 14 } }, label),
        React.createElement(View, { style: { marginLeft: -3 } },
            React.createElement(TextInput, { placeholder: placeholder, placeholderTextColor: "#c4c4c4", style: { fontSize: 18, fontWeight: 'bold' } }))));
}
function SelectBox(_a) {
    var placeholder = _a.placeholder, label = _a.label, renderItem = _a.renderItem, data = _a.data;
    var _b = useState(''), value = _b[0], setValue = _b[1];
    var ref = useRef(null);
    return (React.createElement(React.Fragment, null,
        React.createElement(View, { style: { marginBottom: 10 } },
            React.createElement(Text, { style: { color: '#787878', fontSize: 14 } }, label),
            React.createElement(View, { style: { marginLeft: -3 } },
                React.createElement(TextInput, { placeholder: placeholder, placeholderTextColor: "#c4c4c4", style: { fontSize: 18, fontWeight: 'bold' }, onFocus: function () { return ref.current.open(); }, value: value }))),
        React.createElement(RBSheet, { ref: ref, height: 300, duration: 300, closeOnDragDown: true, customStyles: {
                container: {
                    borderTopLeftRadius: 30,
                    borderTopRightRadius: 30,
                },
            } },
            React.createElement(ScrollView, null,
                React.createElement(FlatList, { data: data, renderItem: function (item) {
                        return (React.createElement(TouchableOpacity, { onPress: function () {
                                setValue(item.item);
                                ref.current.close();
                            } }, renderItem(item)));
                    }, keyExtractor: function (item) { return item.id; } })))));
}
function City(_a) {
    var city = _a.city;
    return (React.createElement(View, { style: { padding: 5, margin: 10 } },
        React.createElement(Text, { style: { color: 'black', fontSize: 16 } }, city)));
}
function State(_a) {
    var state = _a.state;
    return (React.createElement(View, { style: { padding: 5, margin: 10 } },
        React.createElement(Text, { style: { color: 'black', fontSize: 16 } }, state)));
}
function Country(_a) {
    var country = _a.country;
    return (React.createElement(View, { style: { padding: 5, margin: 10 } },
        React.createElement(Text, { style: { color: 'black', fontSize: 16 } }, country)));
}
function SignupForm(_a) {
    var navigation = _a.navigation, close = _a.close;
    navigation.setOptions({
        headerStyle: {
            elevation: 0,
            backgroundColor: 'transparent',
        },
    });
    var _b = useState(false), isLoading = _b[0], setLoading = _b[1];
    var _c = useState(false), isSuccess = _c[0], setIsSuccess = _c[1];
    var ref = useRef(null);
    var stopLoading = function () {
        setTimeout(function () {
            setLoading(isLoading);
            setIsSuccess(!isSuccess);
            close();
            navigation.navigate('Showpage');
        }, 2000);
    };
    return (React.createElement(View, { style: { flex: 1 } },
        React.createElement(ScrollView, null,
            React.createElement(View, { style: styles.buttonCard },
                React.createElement(View, { style: styles.signinCard },
                    React.createElement(Text, { style: {
                            color: '#333333',
                            fontSize: 20,
                            fontWeight: 'bold',
                            width: 150,
                        } }, "register here"),
                    React.createElement(View, { style: { marginTop: 15 } },
                        React.createElement(TextBox, { placeholder: "john doe", label: "full name" }),
                        React.createElement(TextBox, { placeholder: "9999999999", label: "mobile number" }),
                        React.createElement(TextBox, { placeholder: "address line 1", label: "address line 1" }),
                        React.createElement(TextBox, { placeholder: "address line 2", label: "address line 2" }),
                        React.createElement(SelectBox, { placeholder: "select city", data: cities, onSelect: function (item) { return item; }, renderItem: function (_a) {
                                var item = _a.item;
                                return React.createElement(City, { id: item, city: item });
                            }, label: "city" }),
                        React.createElement(SelectBox, { placeholder: "select state", data: states, onSelect: function (item) { return item; }, renderItem: function (_a) {
                                var item = _a.item;
                                return React.createElement(State, { id: item, state: item });
                            }, label: "state" }),
                        React.createElement(SelectBox, { placeholder: "select country", data: countries, onSelect: function (item) { return item; }, renderItem: function (_a) {
                                var item = _a.item;
                                return React.createElement(Country, { id: item, country: item });
                            }, label: "country" }),
                        isSuccess == false && isLoading == false ? (React.createElement(TouchableOpacity, { onPress: function () {
                                setLoading(!isLoading);
                                stopLoading();
                            } },
                            React.createElement(View, { style: styles.otpButton },
                                React.createElement(View, { style: { flex: 1, flexDirection: 'row' } },
                                    React.createElement(Text, { style: {
                                            color: 'white',
                                            marginTop: 12,
                                            marginLeft: 5,
                                            fontSize: 18,
                                        } }, "Submit"))))) : (React.createElement(View, { style: {
                                flex: 1,
                                flexDirection: 'row',
                                margin: 5,
                                marginLeft: 10,
                            } }, isLoading == true ? (React.createElement(ActivityIndicator, { size: "small", color: "#ff297f" })) : (React.createElement(View, { style: { marginTop: -10 } },
                            React.createElement(Icon, { name: "check", color: "#ff297f", size: 30 })))))))))));
}
export default SignupForm;
//# sourceMappingURL=SignUpForm.js.map